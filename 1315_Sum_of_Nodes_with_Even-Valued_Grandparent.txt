
        QUESTION :-

1315. Sum of Nodes with Even-Valued Grandparent
Medium

Given the root of a binary tree, return the sum of values of nodes with an even-valued grandparent.
If there are no nodes with an even-valued grandparent, return 0.
A grandparent of a node is the parent of its parent if it exists.

 Example 1:
Input: root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]
Output: 18
Explanation: The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.
 Example 2:
Input: root = [1]
Output: 0
 
 Constraints:
The number of nodes in the tree is in the range [1, 104].
1 <= Node.val <= 100

Accepted:102,418
Submissions:120,061


        ANSWER :-

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
// APPROACH :-
//     1. we'll make a vector<int> v, to store the values of grand-children of even root values.
//     2. return the sum of all elements in v.
    
    void solve(TreeNode* root, vector<int> &v)  {
        
        if(root == NULL)
            return ;
        
        if(root->val % 2 == 0)      {
            
            if(root->left)  {
                if(root->left->left)
                    v.push_back(root->left->left->val);
                if(root->left->right)
                    v.push_back(root->left->right->val);
            }
            
            if(root->right) {
                if(root->right->left)
                    v.push_back(root->right->left->val);
                if(root->right->right)
                    v.push_back(root->right->right->val);
            }
            
        }
        
        solve(root->left,v);
        solve(root->right,v);
        
        return;
    }
    
    
    int sumEvenGrandparent(TreeNode* root) {
        
        vector<int> v;
        solve(root,v);
        
        int sum = 0;
        for(auto it : v)
            sum += it;
        
        return sum;
    }
};